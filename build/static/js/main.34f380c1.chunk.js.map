{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","style","color","textAlign","fontText","padding","content","onClick","id","baseUrl","axios","get","then","result","data","newObject","post","put","Notification","message","className","App","props","useState","notes","setNotes","newnote","setNewnote","showAll","setShowAll","error","setError","useEffect","noteService","notesToShow","filter","toggleImportantHandler","find","newNote","map","i","onSubmit","event","preventDefault","length","setTimeout","newNoteObj","date","Date","Math","random","concat","onChange","target","value","type","ReactDOM","render","document","getElementById"],"mappings":"4KAoBeA,EAlBF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UACb,qBAAuB,iBAQ7B,OACI,qBAAIC,MAPU,CACdC,MAAO,QACPC,UAAW,OACXC,SAAU,GACVC,QAAS,GAGT,UACKR,EAAKS,QACN,wBAAQC,QAAS,kBAAMT,EAAiBD,EAAKW,KAA7C,SAAmDT,Q,gBCbzDU,EAAU,sDAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SAa1B,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SAQ1B,EALA,SAACN,EAAIO,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SCTnCI,G,MAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EAEK,KAGL,qBAAKC,UAAU,aAAf,SACGD,MAsFME,EAhFH,SAACC,GACZ,IAAD,EAC4BC,mBAAS,IADrC,mBACSC,EADT,KACgBC,EADhB,OAEgCF,mBAAS,IAFzC,mBAESG,EAFT,KAEkBC,EAFlB,OAGgCJ,oBAAS,GAHzC,mBAGSK,EAHT,KAGkBC,EAHlB,OAI4BN,mBAAS,MAJrC,mBAISO,EAJT,KAIgBC,EAJhB,KAMEC,qBAAU,WAENC,IAEGrB,MAAK,SAAAC,GACNY,EAASZ,QAEZ,IAEH,IAAMqB,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aA6BxBoC,EAAyB,SAAC5B,GAE9B,IAAMX,EAAO2B,EAAMa,MAAM,SAAAxC,GAAI,OAAIA,EAAKW,IAAMA,KACtC8B,EAAO,2BAAOzC,GAAP,IAAaG,WAAYH,EAAKG,YACzCiC,EACQzB,EAAI8B,GACX1B,MAAK,SAAAC,GACJY,EAASD,EAAMe,KAAI,SAAA1C,GAAI,OAAIA,EAAKW,KAAOA,EAAKK,EAAShB,UAI3D,OACE,gCACE,uCACA,cAAC,EAAD,CAAcsB,QAASW,IACvB,8BACE,wBAAQvB,QAAS,kBAAMsB,GAAYD,IAAnC,SACGA,EAAU,iBAAmB,eAGlC,6BACGM,EAAYK,KAAI,SAAC1C,EAAM2C,GAAP,OACb,cAAC,EAAD,CAAc3C,KAAMA,EAAMC,iBAAkBsC,GAAjCI,QAGjB,uBAAMC,SApDM,SAACC,GAEf,GADAA,EAAMC,iBACuD,GAAzDnB,EAAMW,QAAO,SAAAtC,GAAI,OAAIA,EAAKS,UAAYoB,KAASkB,OAKjD,OAHAb,EAAS,iBAAmBL,GAC5BmB,YAAY,kBAAMd,EAAS,QAAO,KAClCJ,EAAW,IACJ,KAET,IAAMmB,EAAa,CACjBxC,QAASoB,EACTqB,KAAM,IAAIC,KACVhD,UAAWiD,KAAKC,SAAW,IAG7BjB,EACUa,GACPlC,MAAK,SAAAC,GACNY,EAASD,EAAM2B,OAAOtC,OAExBc,EAAW,KAgCT,UACE,uBAAOyB,SA9Bc,SAACV,GAC1Bf,EAAWe,EAAMW,OAAOC,QA6BiBC,KAAK,OAAOD,MAAO5B,IACxD,wBAAQ6B,KAAK,SAAb,qCCzFR7C,IACGC,IAAI,uDACJC,MAAK,SAAAC,GACJ,IAAMW,EAAQX,EAAOC,KACrB0C,IAASC,OAAO,cAAC,EAAD,CAAKjC,MAAOA,IAC1BkC,SAASC,eAAe,c","file":"static/js/main.34f380c1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n    const label = note.important \n        ? \"Make not important\" : \"Make important\"\n\n    const noteStyle = {\n        color: \"black\",\n        textAlign: \"left\",\n        fontText: 40,\n        padding: 5\n    }\n    return (\n        <li style={noteStyle}>\n            {note.content}\n            <button onClick={() => toggleImportance(note.id)}>{label}</button>\n        </li>\n    )\n    \n}\nexport default Note","import axios from 'axios'\n\nconst baseUrl = \"https://floating-dusk-68862.herokuapp.com/app/notes\"; //\"http://localhost:3001/notes\"\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(result => result.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(result => result.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(result => result.data);\n}\n\nexport default {getAll, create, update}","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport noteService from './services/notes'\nimport './index.css'\n\n\nconst Notification = ({message}) => {\n  if (message === null)\n  {\n    return null;\n  } else {\n    return (\n      <div className=\"errorClass\">\n        {message}\n      </div>\n    )\n  }\n}\n\nconst App = (props) =>\n{\n  const [notes, setNotes] = useState([])\n  const [newnote, setNewnote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    \n      noteService\n        .getAll()\n        .then(result => {\n        setNotes(result);\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    if (notes.filter(note => note.content === newnote).length != 0)\n    {\n      setError(\"Already added \" + newnote)\n      setTimeout( () => setError(null), 1000);\n      setNewnote('')\n      return null;\n    }\n    const newNoteObj = {\n      content: newnote,\n      date: new Date(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(newNoteObj)\n      .then(result => {\n      setNotes(notes.concat(result));\n    })\n    setNewnote('');\n  }\n\n  const changeInputHandler = (event) => {\n    setNewnote(event.target.value);\n  }\n\n  const toggleImportantHandler = (id) => {\n    \n    const note = notes.find( note => note.id == id);\n    const newNote = {...note, important: !note.important};\n      noteService\n      .update(id, newNote)\n      .then(result => {\n        setNotes(notes.map(note => note.id === id ? result : note))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={error} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          {showAll ? 'Show Important' : 'Show all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => \n            <Note key={i} note={note} toggleImportance={toggleImportantHandler}/>\n          )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input onChange={changeInputHandler} type=\"text\" value={newnote}></input>\n        <button type=\"submit\"> Submit the form</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport axios from 'axios'\n\naxios\n  .get(\"https://floating-dusk-68862.herokuapp.com/app/notes\")\n  .then(result => {\n    const notes = result.data;\n    ReactDOM.render(<App notes={notes}/>,\n      document.getElementById(\"root\"))\n  })\n"],"sourceRoot":""}